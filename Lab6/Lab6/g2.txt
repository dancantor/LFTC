G = {
{TYPE, ARRAY_DECL, RELATION, OPERATION, DECLARATION, IDENTIFIER, INTEGER_CONSTANT, ASSIGNMENT_STMT, TERM, SYMBOL, EXPRESSION, IO_STMT, CONDITION, CONDITION_LIST, STMT, IF_STMT, WHILE_STMT, STMT_LIST, DECL_LIST, CMP_STMT, PROGRAM}
{{, }, [, ], (, ), ;, <, >, =, <=, >=, ==, +, *, /,  %, //, &&, ||, int, char, string, bool, True, False, arr, if, else, while, read, write, hello, bye, begin, end}
start
PROGRAM -> hello DECL_LIST CMP_STMT bye
TYPE -> int | char | string | bool
ARRAY_DECL -> arr TYPE IDENTIFIER [ INTEGER_CONSTANT ]
RELATION -> < | > | = | <= | >= | ==
OPERATION -> && | ||
DECLARATION -> TYPE IDENTIFIER ;
ASSIGNMENT_STMT -> IDENTIFIER = EXPRESSION
TERM -> ( EXPRESSION )
SYMBOL -> + | - | * | / | // | %
EXPRESSION -> EXPRESSION SYMBOL TERM | TERM
IO_STMT -> read ( IDENTIFIER ) | write( IDENTIFIER )
CONDITION -> ( EXPRESSION RELATION EXPRESSION )
CONDITION_LIST -> CONDITION | CONDITION OPERATION CONDITION
STMT -> ASSIGNMENT_STMT | IO_STMT | DECLARATION | IF_STMT | WHILE_STMT
IF_STMT -> if ( CONDITION_LIST ) { STMT } | IF ( CONDITION_LIST ) { STMT } else { STMT }
WHILE_STMT -> while ( CONDITION_LIST ) { STMT }
STMT_LIST -> STMT | STMT '\n' STMT_LIST
DECL_LIST -> DECLARATION | DECLARATION DECL_LIST
CMP_STMT -> begin STMT_LIST end
end
PROGRAM